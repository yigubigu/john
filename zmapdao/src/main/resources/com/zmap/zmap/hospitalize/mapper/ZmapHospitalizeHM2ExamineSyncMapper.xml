<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zmap.zmap.hospitalize.mapper.ZmapHospitalizeHM2ExamineSyncMapper">
  <resultMap id="BaseResultMap" type="com.zmap.zmap.hospitalize.model.ZmapHospitalizeHM2ExamineSyncModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="exam_id" jdbcType="VARCHAR" property="examId" />
    <result column="in_hos_code" jdbcType="VARCHAR" property="inHosCode" />
    <result column="exam_flow_code" jdbcType="VARCHAR" property="examFlowCode" />
    <result column="exam_time" jdbcType="VARCHAR" property="examTime" />
    <result column="sickman_code" jdbcType="VARCHAR" property="sickmanCode" />
    <result column="doctor_code" jdbcType="VARCHAR" property="doctorCode" />
    <result column="dept_code" jdbcType="VARCHAR" property="deptCode" />
    <result column="zmap_dept_code" jdbcType="VARCHAR" property="zmapDeptCode" />
    <result column="exam_type_code" jdbcType="VARCHAR" property="examTypeCode" />
    <result column="exam_code" jdbcType="VARCHAR" property="examCode" />
    <result column="zmap_exam_code" jdbcType="VARCHAR" property="zmapExamCode" />
    <result column="exam_result" jdbcType="VARCHAR" property="examResult" />
    <result column="sub_hospital_code" jdbcType="VARCHAR" property="subHospitalCode" />
    <result column="hospital_code" jdbcType="VARCHAR" property="hospitalCode" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    exam_id, in_hos_code, exam_flow_code, exam_time, sickman_code, doctor_code, dept_code, 
    zmap_dept_code, exam_type_code, exam_code, zmap_exam_code, exam_result, sub_hospital_code, 
    hospital_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from zmap_h_m2_examine
    where exam_id = #{examId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from zmap_h_m2_examine
    where exam_id = #{examId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zmap.zmap.hospitalize.model.ZmapHospitalizeHM2ExamineSyncModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zmap_h_m2_examine (exam_id, in_hos_code, exam_flow_code, 
      exam_time, sickman_code, doctor_code, 
      dept_code, zmap_dept_code, exam_type_code, 
      exam_code, zmap_exam_code, exam_result, 
      sub_hospital_code, hospital_code)
    values (#{examId,jdbcType=VARCHAR}, #{inHosCode,jdbcType=VARCHAR}, #{examFlowCode,jdbcType=VARCHAR}, 
      #{examTime,jdbcType=VARCHAR}, #{sickmanCode,jdbcType=VARCHAR}, #{doctorCode,jdbcType=VARCHAR}, 
      #{deptCode,jdbcType=VARCHAR}, #{zmapDeptCode,jdbcType=VARCHAR}, #{examTypeCode,jdbcType=VARCHAR}, 
      #{examCode,jdbcType=VARCHAR}, #{zmapExamCode,jdbcType=VARCHAR}, #{examResult,jdbcType=VARCHAR}, 
      #{subHospitalCode,jdbcType=VARCHAR}, #{hospitalCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zmap.zmap.hospitalize.model.ZmapHospitalizeHM2ExamineSyncModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zmap_h_m2_examine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        exam_id,
      </if>
      <if test="inHosCode != null">
        in_hos_code,
      </if>
      <if test="examFlowCode != null">
        exam_flow_code,
      </if>
      <if test="examTime != null">
        exam_time,
      </if>
      <if test="sickmanCode != null">
        sickman_code,
      </if>
      <if test="doctorCode != null">
        doctor_code,
      </if>
      <if test="deptCode != null">
        dept_code,
      </if>
      <if test="zmapDeptCode != null">
        zmap_dept_code,
      </if>
      <if test="examTypeCode != null">
        exam_type_code,
      </if>
      <if test="examCode != null">
        exam_code,
      </if>
      <if test="zmapExamCode != null">
        zmap_exam_code,
      </if>
      <if test="examResult != null">
        exam_result,
      </if>
      <if test="subHospitalCode != null">
        sub_hospital_code,
      </if>
      <if test="hospitalCode != null">
        hospital_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        #{examId,jdbcType=VARCHAR},
      </if>
      <if test="inHosCode != null">
        #{inHosCode,jdbcType=VARCHAR},
      </if>
      <if test="examFlowCode != null">
        #{examFlowCode,jdbcType=VARCHAR},
      </if>
      <if test="examTime != null">
        #{examTime,jdbcType=VARCHAR},
      </if>
      <if test="sickmanCode != null">
        #{sickmanCode,jdbcType=VARCHAR},
      </if>
      <if test="doctorCode != null">
        #{doctorCode,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null">
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="zmapDeptCode != null">
        #{zmapDeptCode,jdbcType=VARCHAR},
      </if>
      <if test="examTypeCode != null">
        #{examTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="examCode != null">
        #{examCode,jdbcType=VARCHAR},
      </if>
      <if test="zmapExamCode != null">
        #{zmapExamCode,jdbcType=VARCHAR},
      </if>
      <if test="examResult != null">
        #{examResult,jdbcType=VARCHAR},
      </if>
      <if test="subHospitalCode != null">
        #{subHospitalCode,jdbcType=VARCHAR},
      </if>
      <if test="hospitalCode != null">
        #{hospitalCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zmap.zmap.hospitalize.model.ZmapHospitalizeHM2ExamineSyncModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zmap_h_m2_examine
    <set>
      <if test="inHosCode != null">
        in_hos_code = #{inHosCode,jdbcType=VARCHAR},
      </if>
      <if test="examFlowCode != null">
        exam_flow_code = #{examFlowCode,jdbcType=VARCHAR},
      </if>
      <if test="examTime != null">
        exam_time = #{examTime,jdbcType=VARCHAR},
      </if>
      <if test="sickmanCode != null">
        sickman_code = #{sickmanCode,jdbcType=VARCHAR},
      </if>
      <if test="doctorCode != null">
        doctor_code = #{doctorCode,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null">
        dept_code = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="zmapDeptCode != null">
        zmap_dept_code = #{zmapDeptCode,jdbcType=VARCHAR},
      </if>
      <if test="examTypeCode != null">
        exam_type_code = #{examTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="examCode != null">
        exam_code = #{examCode,jdbcType=VARCHAR},
      </if>
      <if test="zmapExamCode != null">
        zmap_exam_code = #{zmapExamCode,jdbcType=VARCHAR},
      </if>
      <if test="examResult != null">
        exam_result = #{examResult,jdbcType=VARCHAR},
      </if>
      <if test="subHospitalCode != null">
        sub_hospital_code = #{subHospitalCode,jdbcType=VARCHAR},
      </if>
      <if test="hospitalCode != null">
        hospital_code = #{hospitalCode,jdbcType=VARCHAR},
      </if>
    </set>
    where exam_id = #{examId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zmap.zmap.hospitalize.model.ZmapHospitalizeHM2ExamineSyncModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zmap_h_m2_examine
    set in_hos_code = #{inHosCode,jdbcType=VARCHAR},
      exam_flow_code = #{examFlowCode,jdbcType=VARCHAR},
      exam_time = #{examTime,jdbcType=VARCHAR},
      sickman_code = #{sickmanCode,jdbcType=VARCHAR},
      doctor_code = #{doctorCode,jdbcType=VARCHAR},
      dept_code = #{deptCode,jdbcType=VARCHAR},
      zmap_dept_code = #{zmapDeptCode,jdbcType=VARCHAR},
      exam_type_code = #{examTypeCode,jdbcType=VARCHAR},
      exam_code = #{examCode,jdbcType=VARCHAR},
      zmap_exam_code = #{zmapExamCode,jdbcType=VARCHAR},
      exam_result = #{examResult,jdbcType=VARCHAR},
      sub_hospital_code = #{subHospitalCode,jdbcType=VARCHAR},
      hospital_code = #{hospitalCode,jdbcType=VARCHAR}
    where exam_id = #{examId,jdbcType=VARCHAR}
  </update>
  
   <!-- **************** 以下为手动添加的配置 *****************-->
  <select id="selectByHisPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zmap_h_m2_examine
    where exam_flow_code = #{examFlowCode,jdbcType=VARCHAR}
  </select>
  <insert id ="batchInsert" parameterType ="java.util.List">
  	 insert into zmap_h_m2_examine (exam_id, in_hos_code, exam_flow_code, exam_time, sickman_code, doctor_code, dept_code, 
    zmap_dept_code, exam_type_code, exam_code, zmap_exam_code, exam_result, sub_hospital_code, 
    hospital_code) values 
      <foreach collection="list" item="item" index="index" separator="," >
      (#{item.examId,jdbcType=VARCHAR}, #{item.inHosCode,jdbcType=VARCHAR}, #{item.examFlowCode,jdbcType=VARCHAR}, 
      #{item.examTime,jdbcType=VARCHAR}, #{item.sickmanCode,jdbcType=VARCHAR}, #{item.doctorCode,jdbcType=VARCHAR}, 
      #{item.deptCode,jdbcType=VARCHAR}, #{item.zmapDeptCode,jdbcType=VARCHAR}, #{item.examTypeCode,jdbcType=VARCHAR}, 
      #{item.examCode,jdbcType=VARCHAR}, #{item.zmapExamCode,jdbcType=VARCHAR}, #{item.examResult,jdbcType=VARCHAR}, 
      #{item.subHospitalCode,jdbcType=VARCHAR}, #{item.hospitalCode,jdbcType=VARCHAR})
      </foreach>
  </insert>
   <delete id="deleteByHisPrimaryKey" parameterType="java.lang.String">
    delete from zmap_h_m2_examine
    where exam_flow_code = #{examFlowCode,jdbcType=VARCHAR}
  </delete>
  <update id="updateByHisPrimaryKey" parameterType="com.zmap.zmap.hospitalize.model.ZmapHospitalizeHM2ExamineSyncModel">
    update zmap_h_m2_examine
    set 
      exam_time = #{examTime,jdbcType=VARCHAR},
      sickman_code = #{sickmanCode,jdbcType=VARCHAR},
      doctor_code = #{doctorCode,jdbcType=VARCHAR},
      dept_code = #{deptCode,jdbcType=VARCHAR},
      zmap_dept_code = #{zmapDeptCode,jdbcType=VARCHAR},
      exam_type_code = #{examTypeCode,jdbcType=VARCHAR},
      exam_code = #{examCode,jdbcType=VARCHAR},
      zmap_exam_code = #{zmapExamCode,jdbcType=VARCHAR},
      exam_result = #{examResult,jdbcType=VARCHAR},
      sub_hospital_code = #{subHospitalCode,jdbcType=VARCHAR},
      hospital_code = #{hospitalCode,jdbcType=VARCHAR}
    where exam_flow_code = #{examFlowCode,jdbcType=VARCHAR}
  </update>
  <update id="batchUpdate"  parameterType="java.util.List">
  	<foreach collection="list" item="item" index="index" open="" close="" separator=";">
  		update zmap_h_m2_examine
  		<set>
	      exam_time = #{item.examTime,jdbcType=VARCHAR},
	      sickman_code = #{item.sickmanCode,jdbcType=VARCHAR},
	      doctor_code = #{item.doctorCode,jdbcType=VARCHAR},
	      dept_code = #{item.deptCode,jdbcType=VARCHAR},
	      zmap_dept_code = #{item.zmapDeptCode,jdbcType=VARCHAR},
	      exam_type_code = #{item.examTypeCode,jdbcType=VARCHAR},
	      exam_code = #{item.examCode,jdbcType=VARCHAR},
	      zmap_exam_code = #{item.zmapExamCode,jdbcType=VARCHAR},
	      exam_result = #{item.examResult,jdbcType=VARCHAR},
	      sub_hospital_code = #{item.subHospitalCode,jdbcType=VARCHAR},
	      hospital_code = #{item.hospitalCode,jdbcType=VARCHAR}
  		</set>
  		 where exam_flow_code = #{item.examFlowCode,jdbcType=VARCHAR}
  	</foreach>
  </update>
  <update id="updateHospitalizeID">
  	update zmap_h_m2_examine m2 set m2.in_hos_code = (select m1.in_hos_id from zmap_h_m1_hospitalize m1 where m1.sickman_code = m2.sickman_code) 
	where m2.in_hos_code is null or m2.in_hos_code=''
  </update>
</mapper>